load_all()
library(devtools)
load_all()
library(baseImportance)
importance_frame
library(baseImportance)
library(baseImportance)
library(roxygen2)
library(baseImportance)
library(baseImportance)
decreasing_importance()
library(baseImportance)
library(baseImportance)
df2
c(1.00000000, 0.61538462, 0.00000000, 0.06538462, 0.9020979, 1.0000000, 0.7874126, 0.0000000) * 0.8
c(1.00000000, 0.61538462, 0.00000000, 0.06538462, 0.9020979, 1.0000000, 0.7874126, 0.0000000) * 0.8 + c(0.9219858, 0.2978723, 1.0000000, 0.0000000, 0.9661017, 0.5254237, 1.0000000, 0.0000000) * 0.2)
c(1.00000000, 0.61538462, 0.00000000, 0.06538462, 0.9020979, 1.0000000, 0.7874126, 0.0000000) * 0.8 + c(0.9219858, 0.2978723, 1.0000000, 0.0000000, 0.9661017, 0.5254237, 1.0000000, 0.0000000) * 0.2
c(0.9843972, 0.5518822, 0.2000000, 0.0523077, 0.9148987, 0.9050847, 0.8299301, 0.0000000)/2
c(c(0.9843972, 0.5518822, 0.2000000, 0.0523077, 0.9148987, 0.9050847, 0.8299301, 0.0000000)/2 )
library(baseImportance)
getwd()
df3 = read_excel("/tests/testthat/data/df3.xlsx")
library(read\)
library(readxl)
df3 = read_excel("/tests/testthat/data/df3.xlsx")
df3 = read_excel("./tests/testthat/data/df3.xlsx")
df3
weights = c(0.8, 0.2)
importance_frame = df3
library(baseImportance)
expect_equal(baseImpact(df3,weights = c(0.8, 0.2))$impact %>% round(7),
c(0.9843972, 0.5518822, 0.2000000, 0.0523077, 0.9148987, 0.9050847, 0.8299301, 0.0000000))
df
df3
baseImpact(df3)
baseImpact(./tests/testthat/data/df3.xlsx)
baseImpact("./tests/testthat/data/df3.xlsx")
c(0.96099291 * 0.8 + 0.93409980 * 0.2, 0.45662848 * 0.8 + 0.76271186 * 0.2, 0.50000000 * 0.8 + 0.89370629 * 0.2 + 0.03269231 * 0.8)
library(baseImportance)
c(0.96099291 * 0.8 + 0.93409980 * 0.2, 0.45662848 * 0.8 + 0.76271186 * 0.2, 0.50000000 * 0.8 + 0.89370629 * 0.2, 0.03269231 * 0.8)
baseImpact_combined <- function(paths, model_ids, ensamble_model_id, weights_metrics = NULL, weights_models = NULL, divide_by_number = FALSE){
data = list()
for(i in 1:length(paths)){
data[[i]] = calculate_base_variables_importance(importance_frame = read_excel(paths[i]), weights = weights_metrics, divide_by_number = divide_by_number)
}
data <- do.call(rbind.data.frame, data)
return(calculate_combined_model(importance_frame = data, model_ids = model_ids, ensamble_model_id = ensamble_model_id, weights = weights_models))
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(data.table)
library(readxl)
temp_0_5 = baseImportance::baseImpact_combined(paths, c(102,103), 104, weights_models = c(0.5,0.5))
paths = c("C:/Users/mjalocha/Desktop/ranking/model_101_ranking.xlsx", "C:/Users/mjalocha/Desktop/ranking/model_rest_ranking.xlsx")
temp_0_5 = baseImportance::baseImpact_combined(paths, c(102,103), 104, weights_models = c(0.5,0.5))
temp_0_8 = baseImportance::baseImpact_combined(paths, c(102,103), 104, weights_models = c(0.8,0.2))
temp_0_9 = baseImportance::baseImpact_combined(paths, c(102,103), 104, weights_models = c(0.9,0.1))
temp_0_5
temp = cbind(temp_0_5 %>% select(variable, impact), temp_0_8$impact, temp_0_9$impact)
library(dlpyr)
library(dplyr)
temp = cbind(temp_0_5 %>% select(variable, impact), temp_0_8$impact, temp_0_9$impact)
temp
df
df3
df = read_excel("C:/Users/mjalocha/Desktop/ranking/model_101_ranking.xlsx")
df = read_excel("C:/Users/mjalocha/Desktop/ranking/model_101_ranking.xlsx")
library(readxl)
df = read_excel("C:/Users/mjalocha/Desktop/ranking/model_101_ranking.xlsx")
df
df[df$base_variable == "MAX_DEBT_CRNT_ACTV_BGT_PROD"]
df[df$base_variable == "MAX_DEBT_CRNT_ACTV_BGT_PROD",]
df = read_excel("C:/Users/mjalocha/Desktop/ranking/model_rest_ranking.xlsx")
df2 = read_excel("C:/Users/mjalocha/Desktop/ranking/model_rest_ranking.xlsx")
df = read_excel("C:/Users/mjalocha/Desktop/ranking/model_101_ranking.xlsx")
df2[df2$base_variable == "MAX_DEBT_CRNT_ACTV_BGT_PROD",]
df[df$base_variable == "MAX_DEBT_CRNT_ACTV_BGT_PROD",]
res = baseImportance::baseImpact("C:/Users/mjalocha/Desktop/ranking/model_rest_ranking.xlsx")
res
res = baseImportance::baseImpact("C:/Users/mjalocha/Desktop/ranking/model_101_ranking.xlsx")
res
res$variable == MAX_DEBT_CRNT_ACTV_BGT_PROD
res$variable == "MAX_DEBT_CRNT_ACTV_BGT_PROD"
model_ids
model_ids = (101, 103)
model_ids = c(101, 103)
ensamble_model_id = 104
weights = c(0.9,0.1)
weights_models = c(0.9,0.1)
divide_by_number = FALSE
weights_metrics = NULL
data = list()
for(i in 1:length(paths)){
data[[i]] = calculate_base_variables_importance(importance_frame = read_excel(paths[i]), weights = weights_metrics, divide_by_number = divide_by_number)
}
data <- do.call(rbind.data.frame, data)
calculate_base_variables_importance <- function(importance_frame, divide_by_number, weights = NULL, base_columns = c("model_variable", "base_variable", "model_id", "class"))
{
#Set colnames
colnames(importance_frame)[1:length(base_columns)] <- base_columns
#Change metrics type to numeric
metric_cols = colnames(importance_frame)[colnames(importance_frame) %!in% base_columns]
importance_frame[,metric_cols] <- sapply(importance_frame[,metric_cols],as.numeric)
#Join frames
grouped_variables = importance_frame %>% group_by(.[[1]]) %>% count()
colnames(grouped_variables) = c("model_variable", "number_of_variables")
joined_frames = left_join(importance_frame, grouped_variables)
#Calculate impact for all model id's
models = importance_frame$model_id %>% unique()
res = list()
for(model in models){
temp_frame <- decreasing_frequency_importance(frame = joined_frames[joined_frames$model_id == model,], divide_by_number = divide_by_number, base_columns = base_columns)
temp_frame <- calculate_impact(base_variables_importance = temp_frame, metric_cols = metric_cols, weights = weights)
temp_frame$model_id = model
res[[paste(model)]] = temp_frame %>% select(variable, impact, model_id)
}
return(do.call(rbind.data.frame, res))
}
library(baseImportance)
data = list()
for(i in 1:length(paths)){
data[[i]] = calculate_base_variables_importance(importance_frame = read_excel(paths[i]), weights = weights_metrics, divide_by_number = divide_by_number)
}
data <- do.call(rbind.data.frame, data)
'%!in%' <- function(x,y){!('%in%'(x,y))}
data = list()
for(i in 1:length(paths)){
data[[i]] = calculate_base_variables_importance(importance_frame = read_excel(paths[i]), weights = weights_metrics, divide_by_number = divide_by_number)
}
data <- do.call(rbind.data.frame, data)
library(dplyr)
data = list()
for(i in 1:length(paths)){
data[[i]] = calculate_base_variables_importance(importance_frame = read_excel(paths[i]), weights = weights_metrics, divide_by_number = divide_by_number)
}
data <- do.call(rbind.data.frame, data)
data
data[data$variable == "MAX_DEBT_CRNT_ACTV_BGT_PROD",]
importance_frame = data
#Verify whether the user has entered the weights and their correct number
if(is.null(weights)){
weights = rep(1,length(model_ids))/length(model_ids)
} else if(length(model_ids) != length(weights)){
return("Pass correct number of weights")
}
importance_frame = importance_frame %>%
filter(model_id %in% model_ids)
importance_frame
variables <- importance_frame$variable %>% unique()
res = data.frame("variable" = character(), "impact" = character(), "model_id" = numeric())
variable = "MAX_DEBT_CRNT_ACTV_BGT_PROD"
temp_impact = importance_frame$impact[importance_frame$variable == variable]
temp_impact
temp_impact = importance_frame[importance_frame$variable == variable] %>% select(impact, model_id)
temp_impact = importance_frame[importance_frame$variable == variable,] %>% select(impact, model_id)
temp_impact
#Create data frame with model id and assigned weight to it
weights_frame = data.frame(model_id = model_ids, weights = weights)
weights_frame
left_join(temp_impact, weights_frame)
temp_impact = importance_frame[importance_frame$variable == variable,] %>% select(impact, model_id) %>% left_join(weights_frame)
temp_impact
temp_impact %>% mutate(imp = sum(impact * weights))
variable
variables
variable = "AMOUNT_OF_INCOME"
temp_impact = importance_frame[importance_frame$variable == variable,] %>% select(impact, model_id) %>% left_join(weights_frame)
temp_impact
0.2110766 * 0.9 + 0.1767118 * 0.1
temp_impact %>% mutate(imp = sum(impact * weights))
sum(temp_impact$impact * temp_impact$weights)
variable = "MAX_DEBT_CRNT_ACTV_BGT_PROD"
sum(temp_impact$impact * temp_impact$weights)
temp_impact = importance_frame[importance_frame$variable == variable,] %>% select(impact, model_id) %>% left_join(weights_frame)
sum(temp_impact$impact * temp_impact$weights)
library(baseImportance)
calculate_combined_model <- function(importance_frame, model_ids, ensamble_model_id, weights = NULL){
#Verify whether the user has entered the weights and their correct number
if(is.null(weights)){
weights = rep(1,length(model_ids))/length(model_ids)
} else if(length(model_ids) != length(weights)){
return("Pass correct number of weights")
}
#Create data frame with model id and assigned weight to it
weights_frame = data.frame(model_id = model_ids, weights = weights)
#Select specified model id's
importance_frame = importance_frame %>%
filter(model_id %in% model_ids)
variables <- importance_frame$variable %>% unique()
res = data.frame("variable" = character(), "impact" = character(), "model_id" = numeric())
#Calculate base variables impact for combined model
for(variable in variables){
temp_impact = importance_frame[importance_frame$variable == variable,] %>% select(impact, model_id) %>% left_join(weights_frame)
res = rbind(res, data.frame("variable" = variable, "impact" = sum(temp_impact$impact * temp_impact$weights), "model_id" = ensamble_model_id))
}
return(res)
}
baseImpact_combined <- function(paths, model_ids, ensamble_model_id, weights_metrics = NULL, weights_models = NULL, divide_by_number = FALSE){
data = list()
for(i in 1:length(paths)){
data[[i]] = calculate_base_variables_importance(importance_frame = read_excel(paths[i]), weights = weights_metrics, divide_by_number = divide_by_number)
}
data <- do.call(rbind.data.frame, data)
return(calculate_combined_model(importance_frame = data, model_ids = model_ids, ensamble_model_id = ensamble_model_id, weights = weights_models))
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(data.table)
library(readxl)
library(dplyr)
temp_0_5 = baseImportance::baseImpact_combined(paths, c(101,103), 104, weights_models = c(0.5,0.5))
temp_0_8 = baseImportance::baseImpact_combined(paths, c(101,103), 104, weights_models = c(0.8,0.2))
temp_0_9 = baseImportance::baseImpact_combined(paths, c(101,103), 104, weights_models = c(0.9,0.1))
temp = cbind(temp_0_5 %>% select(variable, impact), temp_0_8$impact, temp_0_9$impact)
colnames(temp) = c("variable", "impact_0_5",  "impact_0_8",  "impact_0_9")
DT::datatable(temp)
DT::datatable(temp %>% select(variable, impact_0_9))
z = data.frame(model_id = c(101,102), zapa = c(21, 22))
q = data.frame(model_id = c(101,102), papa = c(44, 12))
left_join
left_join(z,q, "model_id")
left_join(z,q, "model_id")
library(dplyt)
library(dplyr)
left_join(z,q, "model_id")
